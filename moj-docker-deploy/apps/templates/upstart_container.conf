{# Set up variables for normal container or branchrunning #}
{% if appdata is defined and appdata.get('branchbuilder', False) %}
{% set target_container_name = branch_name %}
{% set docker_branchrunner_args = " -e DB_NAME='{{branch_name}}' -e DOCKER_STATE=create " %}
{% else %}
{% set target_container_name = cname %}
{% set docker_branchrunner_args = " " %}
{% endif %}

description "{{target_container_name}} container"
author "tools@digital.justice.gov.uk"

# If linking is set up on this container then depend the service start/stop
# on the link target container services. If theres no linking, then default
# to starting when docker starts
{% if (cdata.get('links', [])|length) > 0 %}
start on ({% for link_config in cdata.get('links', []) if link_config.get('required', True) %}{% if loop.index > 1 %} or{% endif %} started {{ link_config.get('link') }}_container{% endfor %})
stop on runlevel [!2345] or ({% for link_config in cdata.get('links', []) if link_config.get('required', True) %}{% if loop.index > 1 %} or{% endif %} stopped {{ link_config.get('link') }}_container{% endfor %})
{% else %}
start on filesystem and started docker
stop on runlevel [!2345]
{% endif %}

respawn
respawn limit 5 300
env HOME=/root

pre-start script
  /usr/share/moj-docker-deploy/run_container_{{target_container_name}}.sh pre_start
end script

script
  /usr/share/moj-docker-deploy/run_container_{{target_container_name}}.sh start
end script

post-start script
  /usr/share/moj-docker-deploy/run_container_{{target_container_name}}.sh post_start
end script

post-stop script
  /usr/share/moj-docker-deploy/run_container_{{target_container_name}}.sh stop
end script
