{% set ssl = appdata.get('ssl', {}) %}

{% for container, cdata in appdata.get('containers', {}).items() %}
upstream {{container}} { server 127.0.0.1:{{ cdata['ports']['app']['host']}}; }
{% endfor %}

server {
    listen     {{ appdata.get('nginx_port', 80) }} ;
    server_name {{ server_name }} {{ appdata.get('server_names',[])|join(' ') }}; 

    client_max_body_size {{ appdata.get('client_max_body_size', '3m') }};
    rewrite_log  on;
    {% for rewrite in appdata.get('rewrites', []) %}
    rewrite {{ rewrite.pattern }} {{ rewrite.to }} {{ rewrite.type }};
    {% endfor %}

    access_log  /var/log/nginx/{{server_name}}.access.json logstash_json;
    error_log   /var/log/nginx/{{server_name}}.error.log error;

    error_page  500 502 504       /500.html;
    error_page  503               /503.html;
    error_page  404               /404.html;


    {% for container, cdata in appdata.get('containers', {}).items() %}
    location {{cdata.get('location', '/')}} {
        {% if ssl.get('redirect', True) %}
        if ($http_x_forwarded_proto != 'https') {
                rewrite ^ https://$host$request_uri? permanent;
        }
        {% endif %}

        # we are not adding any new headers here as they will be set by load balancer
        proxy_redirect     off;
        proxy_set_header   X-Real-IP         $HTTP_X_REAL_IP;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $HTTP_X_FORWARDED_PROTO;
        proxy_set_header   Host              $host;
        proxy_pass http://{{container}};
    }
    {% for location in cdata.get('http_locations',[]) %}
    location {{location}} {
        # we are not adding any new headers here as they will be set by load balancer

        {% if cdata.get('custom_location_config', False) -%}
        {%- for extraline in cdata.custom_location_config.get(location, []) -%}
        {{extraline}}
        {% endfor -%}
        {% endif %}

        proxy_redirect     off;
        proxy_set_header   X-Real-IP         $HTTP_X_REAL_IP;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $HTTP_X_FORWARDED_PROTO;
        proxy_set_header   Host              $host;
        proxy_pass http://{{container}};
    }
    {% endfor %}
    {% endfor %}

    {% for proxy in appdata.get('proxies',[]) %}
    location {{ proxy['location'] }} {
        {% if ssl.get('redirect', True) %}
        if ($http_x_forwarded_proto != 'https') {
                rewrite ^ https://$host$request_uri? permanent;
        }
        {% endif %}
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       {{ proxy['upstream'] }};
        proxy_set_header Host {{ proxy.get('host_header', '$host') }};
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
    }
    {% endfor %}

	{{ salt['grains.get']('dbhost', default='unknown') }}
    {% if salt['grains.get']('StaticBucketName', False) %}
    location {{ appdata.get('assets_location','/assets') }} {
        {% if ssl.get('redirect', True) %}
        if ($http_x_forwarded_proto != 'https') {
                rewrite ^ https://$host$request_uri? permanent;
        }
        {% endif %}
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       https://{{ salt['grains.get']('StaticBucketName')}}.s3-eu-west-1.amazonaws.com;
        proxy_set_header Host {{ salt['grains.get']('StaticBucketName' )}}.s3-eu-west-1.amazonaws.com;
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
    }
    {% endif %}

}
